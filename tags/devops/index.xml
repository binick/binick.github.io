<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>devops on binick blog</title>
    <link>https://binick.blog/tags/devops/</link>
    <description>Recent content in devops on binick blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>nicola.biancolini@gmail.com (Nicola Biancolini)</managingEditor>
    <webMaster>nicola.biancolini@gmail.com (Nicola Biancolini)</webMaster>
    <copyright>See this site&#39;s source code [here](https://github.com/binick/binick.github.io), licensed under GPLv3.</copyright>
    <lastBuildDate>Sat, 02 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://binick.blog/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to include code coverage in Azure DevOps pipeline?</title>
      <link>https://binick.blog/2021/01/02/azure-devops-code-coverage/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      <author>nicola.biancolini@gmail.com (Nicola Biancolini)</author>
      <guid>https://binick.blog/2021/01/02/azure-devops-code-coverage/</guid>
      <description>Managing multiple reports in Azure DevOps can get complicated, let&amp;#39;s see how MSBuild can help us.</description>
      <content:encoded><![CDATA[<p>By code coverage, we mean the action of trying to measure how much of our code has been executed by our tests.
This sound like</p>


<p><details >
  <summary markdown="span">TL;DR</summary>
  <blockquote>
<p>Untested code is a broken code.
Definitely a strong statement but true in a way, we don&rsquo;t always manage to get enough coverage.
Often this happens because we don&rsquo;t have time, other times because despite having written tests we are not able to read the metrics.</p>
</blockquote>

</details></p>

<p>So, how we can &ldquo;humanize&rdquo; code coverage metrics? And how we can generate its?</p>
<p>To answer at these questions I usually use two libraries.</p>

  <div class="github-ref-container">
    <h2>
      <img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo" loading="lazy">
      <a href="https://github.com/coverlet-coverage" class="account">coverlet-coverage</a>
      /
      <a href="https://github.com/coverlet-coverage/coverlet" class="repo">coverlet</a>
    </h2>
  </div>

<p>to gather metrics, and</p>

  <div class="github-ref-container">
    <h2>
      <img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo" loading="lazy">
      <a href="https://github.com/danielpalme" class="account">danielpalme</a>
      /
      <a href="https://github.com/danielpalme/ReportGenerator" class="repo">ReportGenerator</a>
    </h2>
  </div>

<p>for generate human-readable reports.</p>
<h2 id="how-can-set-up-__coverlet__">How can set-up <strong><em>coverlet</em></strong>?</h2>
<p>I usually include <a href="https://www.nuget.org/packages/coverlet.msbuild/">coverlet.msbuild</a> by <a href="https://docs.microsoft.com/visualstudio/msbuild/msbuild-dot-targets-files">MSBuild .targets Files - Visual Studio | Microsoft Docs</a>.</p>
<script type="application/javascript" src="https://gist.github.com/binick/71ec60d143ee51523e2c7ac23b9ae543.js?file=CollectCoverage.targets"></script>

<p>For alternative ways to include <em>coverlet</em> into yout test project see also <a href="https://github.com/coverlet-coverage/coverlet#Quick-Start">coverlet-coverage/coverlet: Cross platform code coverage for .NET (github.com)</a>.</p>
<h2 id="how-can-set-up-__reportgenerator__">How can set-up <strong><em>ReportGenerator</em></strong>?</h2>
<p>In keeping with above to include <a href="https://www.nuget.org/packages/ReportGenerator">ReportGenerator</a> by <a href="https://docs.microsoft.com/visualstudio/msbuild/msbuild-dot-targets-files">MSBuild .targets Files - Visual Studio | Microsoft Docs</a>.</p>
<script type="application/javascript" src="https://gist.github.com/binick/71ec60d143ee51523e2c7ac23b9ae543.js?file=ReportGenerator.targets"></script>

<p>Also this tool offer a various way to use it, you can find all ways onto official documentation <a href="https://danielpalme.github.io/ReportGenerator/">ReportGenerator - converts coverage reports generated by coverlet</a>.</p>
<h2 id="how-to-wire-up-all-that">How to wire-up all that?</h2>
<p>To make everything work we need to add another <em>MSBuild</em> file.</p>
<script type="application/javascript" src="https://gist.github.com/binick/71ec60d143ee51523e2c7ac23b9ae543.js?file=Test.targets"></script>

<p>And include this into your test project, something like this</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="ln" id="1"><a style="outline: none; text-decoration:none; color:inherit" href="#1">1</a></span><span class="nt">&lt;Project</span> <span class="na">Sdk=</span><span class="s">&#34;Microsoft.NET.Sdk&#34;</span><span class="nt">&gt;</span>
<span class="ln" id="2"><a style="outline: none; text-decoration:none; color:inherit" href="#2">2</a></span>
<span class="ln" id="3"><a style="outline: none; text-decoration:none; color:inherit" href="#3">3</a></span>  <span class="nt">&lt;PropertyGroup&gt;</span>
<span class="ln" id="4"><a style="outline: none; text-decoration:none; color:inherit" href="#4">4</a></span>    <span class="nt">&lt;TargetFramework&gt;</span>net5.0<span class="nt">&lt;/TargetFramework&gt;</span>
<span class="ln" id="5"><a style="outline: none; text-decoration:none; color:inherit" href="#5">5</a></span>  <span class="nt">&lt;/PropertyGroup&gt;</span>
<span class="ln" id="6"><a style="outline: none; text-decoration:none; color:inherit" href="#6">6</a></span>
<span class="ln" id="7"><a style="outline: none; text-decoration:none; color:inherit" href="#7">7</a></span>  <span class="nt">&lt;Import</span> <span class="na">Project=</span><span class="s">&#34;Tests.targets&#34;</span> <span class="nt">/&gt;</span>
<span class="ln" id="8"><a style="outline: none; text-decoration:none; color:inherit" href="#8">8</a></span>  
<span class="ln" id="9"><a style="outline: none; text-decoration:none; color:inherit" href="#9">9</a></span><span class="nt">&lt;/Project&gt;</span>
</code></pre></div><p>Now everything you are able to run <code>dotnet test</code> you will able to inspect and analyze something like this</p>
<p><img loading="lazy" src="https://camo.githubusercontent.com/adbd81e4a37adb003d75ecc13d508acda0c7aebc/68747470733a2f2f64616e69656c70616c6d652e6769746875622e696f2f5265706f727447656e657261746f722f7265736f75726365732f73637265656e73686f74312e706e67" alt="coverage-report)"  />
</p>
<p><img loading="lazy" src="https://camo.githubusercontent.com/05adffdf7d564ad20b92b174c47353a26337ecdc58887d0c64a3b4e633e8770a/68747470733a2f2f64616e69656c70616c6d652e6769746875622e696f2f5265706f727447656e657261746f722f7265736f75726365732f73637265656e73686f74322e706e67" alt="coverage-report-detail"  />
</p>
<p>I think that is an amazing tool to understand at a glance which codes are covered and which not.</p>
<h2 id="and-now-how-i-can-put-it-into-azure-devops-pipeline">And now, how I can put it into Azure DevOps pipeline?</h2>
<p>It would be nice if this report came was published into the <em>Build pipeline</em> report, don&rsquo;t you think? Maybe even include branch policies for it.</p>
<p>Well that&rsquo;s possible by use <a href="https://docs.microsoft.com/azure/devops/pipelines/tasks/test/publish-code-coverage-results">Publish Code Coverage Results task</a>, something like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="ln" id="1"><a style="outline: none; text-decoration:none; color:inherit" href="#1">1</a></span>- <span class="nt">task</span><span class="p">:</span><span class="w"> </span><span class="l">PublishCodeCoverageResults@1</span><span class="w">
</span><span class="ln" id="2"><a style="outline: none; text-decoration:none; color:inherit" href="#2">2</a></span><span class="w">  </span><span class="nt">displayName</span><span class="p">:</span><span class="w"> </span><span class="l">Publish Code Coverage Results</span><span class="w">
</span><span class="ln" id="3"><a style="outline: none; text-decoration:none; color:inherit" href="#3">3</a></span><span class="w">  </span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span><span class="ln" id="4"><a style="outline: none; text-decoration:none; color:inherit" href="#4">4</a></span><span class="w">    </span><span class="nt">codeCoverageTool</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;cobertura&#39;</span><span class="w">
</span><span class="ln" id="5"><a style="outline: none; text-decoration:none; color:inherit" href="#5">5</a></span><span class="w">    </span><span class="nt">summaryFileLocation</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)/Reports/Summary/Cobertura.xml&#39;</span><span class="w">
</span><span class="ln" id="6"><a style="outline: none; text-decoration:none; color:inherit" href="#6">6</a></span><span class="w">    </span><span class="nt">continueOnError</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="ln" id="7"><a style="outline: none; text-decoration:none; color:inherit" href="#7">7</a></span><span class="w">    </span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">always()</span><span class="w">
</span></code></pre></div><p>We notice the <code>summaryFileLocation</code> argument, this means that we will push only one file to <em>Azure DevOps</em> why?</p>
<p>One unwrite note of <em>Publish Code Coverage Results task</em> or limitation, I don&rsquo;t know, is that the sum of covered lines, when we publish more reports, is take from the first file <img loading="lazy" src="pipeline-run-summary.png" alt=""  />
</p>
<p>This results in an unreliable result.</p>
<p>To fix that problem we can marge multiple reports into a summary reports so that can be publish it only one. One way to make it is the follow</p>
<script type="application/javascript" src="https://gist.github.com/binick/71ec60d143ee51523e2c7ac23b9ae543.js?file=SummaryReportGenerator.proj"></script>

<p>and run <em>MSBuild</em> project into the pipeline with</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="ln" id="1"><a style="outline: none; text-decoration:none; color:inherit" href="#1">1</a></span>- <span class="nt">script</span><span class="p">:</span><span class="w"> </span><span class="l">dotnet msbuild SummaryReportGenerator.proj /p:Configuration=$(Configuration)</span><span class="w">
</span><span class="ln" id="2"><a style="outline: none; text-decoration:none; color:inherit" href="#2">2</a></span><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">GenerateCodeCoverageSummary</span><span class="w">
</span><span class="ln" id="3"><a style="outline: none; text-decoration:none; color:inherit" href="#3">3</a></span><span class="w">  </span><span class="nt">displayName</span><span class="p">:</span><span class="w"> </span><span class="l">Generate code coverage summary</span><span class="w">
</span></code></pre></div><p>Once you&rsquo;ve done this the sum of covered lines on <em>Build pipeline</em> will true.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
