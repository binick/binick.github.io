name: build
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:    
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup node.js
        uses: actions/setup-node@v5

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'

      - name: NPM install
        run: npm install && npm exec playwright install --with-deps

      - name: Build site
        run: hugo -e e2e-testing -s ./src --minify

      - name: E2E tests
        run: npm run test
        continue-on-error: true
      
      - name: Generate HTML report
        run: npx github-actions-ctrf artifacts/test-results/ctrf-report.json
        if: always()

      - name: Upload SARIF analysis results
        if: always()
        run: |
          find artifacts/test-results/a11y -type f -name "*.sarif" | while read -r sarif_file; do
            patched=$(jq '
                . as $root
                  | ($root.runs[].results
                      | map(.locations // [])
                      | flatten
                      | map(select(.physicalLocation.artifactLocation.uri? != null))
                      | first
                      | .physicalLocation) as $first
                  | (.runs[].results[].locations[]?.physicalLocation.artifactLocation.uri) |= sub("https?://[^/]+/"; "")
                  | .runs[].results |= map(
                      if (.locations == [] or .locations == null)
                      then .locations = [
                        {
                          "physicalLocation": {
                      "artifactLocation": $first.artifactLocation
                          }
                        }
                      ]
                      else .
                      end
                    )
            ' "$sarif_file")
            
            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/code-scanning/sarifs \
              -f commit_sha='${{ github.sha }}' \
              -f ref='${{ github.ref }}' \
              -f sarif="$(echo "$patched" | gzip -c | base64 -w0)"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
